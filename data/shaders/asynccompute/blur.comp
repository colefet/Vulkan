#version 450

layout (local_size_x = 16, local_size_y = 16) in;
layout (binding = 0, r8) uniform readonly image2D inputSSAO;
layout (binding = 1, r8) uniform image2D resultImage;

void main() 
{
	const int blurRange = 2;
	int n = 0;
	//vec2 texelSize = 1.0 / vec2(imageSize(inputSSAO));
	float result = 0.0;
	for (int x = -blurRange; x < blurRange; x++) 
	{
		for (int y = -blurRange; y < blurRange; y++) 
		{
			//vec2 offset = vec2(float(x), float(y)) * texelSize;
			//result += texture(samplerSSAO, inUV + offset).r;
			ivec2 sample_offset= ivec2(gl_GlobalInvocationID.xy+ivec2(x,y));
			result +=imageLoad(inputSSAO, ivec2(gl_GlobalInvocationID.xy)).r;
			n++;
		}
	}
	result = result / (float(n));
	imageStore(resultImage, ivec2(gl_GlobalInvocationID.xy), vec4(result));
}